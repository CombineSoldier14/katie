Katie is continuation of the Qt4 C++ toolkit with the goal to keep it alive,
clean it up, fix some bugs and backport some features from Qt5. It is based
on the latest Git revision of Qt v4.8.

There are several things you should be aware before considering Katie:

 - some components and tools have been removed:
  - QMake, Linguist, Assistant, checksdk, macdeployqt, pixeltool, qconfig,
    qdoc, qev, qvfb, runonphone and other non-essential
  - Qt3Support, QtWebKit, QtHelp, QtXmlPatterns, QtOpenGL, ActiveQt, Phonon and
    QtMultimedia

 - some things have changed:
  - QMake build system replaced with CMake
  - QStyleOption*V{2,3,4} classes have been merged
  - QIconEngineV{2} classes have been merged
  - QIconEnginePluginV{2} classes have been merged
  - QIconEngineFactoryInterfaceV{2} classes and interfaces have been merged
  - QKeyEventEx and QKeyEvent classes have been merged
  - QGuiPlatformPlugin class is public
  - zlib, OpenSSL, PCRE, Freetype and X11 are required for building
  - OpenSSL, D-Bus, CUPS, resolv and NSL cannot be runtime dependencies, they
    must be linked to during build
  - QtUiTools is build as shared library by default
  - moc, uic, rcc, lrelease, lupdate, etc. are linked to components
  - updated bundled Harfbuzz from upstream (not Harfbuzz-NG)
  - Symbian, QWS, QPA, Mac and Windows are no longer supported platforms
  - OpenVG is no longer supported graphics output
  - Blitter is no longer supported painting engine
  - native graphics system is no more, rasterizer is just as fast as native
  - QPicture, QPictureIO and plugins for it are no longer supported
  - QML debugger and inspector have been removed, potentially dangerous
  - no SIMD, zero performance impact with decent compiler
  - state machine is no more
  - removed non-open source DB2, OCI, TDS and InterBase database drivers
  - removed 3rd party sources that are very common nowdays

 - some additions have been made: 
  - JSON classes and types
  - command line parser
  - standard directories handler
  - building with OpenSSL v1.1+ is possible
  - building with ICU v59+ is possible
  - building with IODBC instead of unixODBC is possible
  - building with LTO is possible and supported, if the toolchain can handle it
  - building without resolv is possible
  - alternative libc implementations support
  - support for generating SHA-224, SHA-256, SHA-384, SHA-512 hash sums (SHA-2)
  - brief manual pages for all command-line tools
  - desktop files, Shell profile and dynamic linker/loader config are installed
    to ease vendors and deployment in general
  - automatic async DBus calls based on return type, no Q_NOREPLY needed
  - more reliable qrand(), seeded per thread
  - improved namespaces support and introduced QT_NAMESPACE_COMPAT
  - script component relies on PCRE instead of internal copy

Bugs fixed in Katie, some of which in Qt5 too:
QTBUG-23502, QTBUG-37115, QTBUG-15052, QTBUG-23522, QTBUG-6139, QTBUG-26889,
QTBUG-21548, QTBUG-6133, QTBUG-18188, QTBUG-36767, QTBUG-35387, QTBUG-37035,
QTBUG-28321, QTBUG-21993, QTBUG-26590, QTBUG-2124, QTBUG-20482, QTBUG-41361,
QTBUG-40153, QTBUG-35479, QTBUG-1628, QTBUG-42989, QTBUG-34861, QTBUG-46767,
QTBUG-25114, QTBUG-24672, QTBUG-23524 (WIP), QTBUG-56088, QTBUG-42189,
QTBUG-39285

Unless you use QMake and QDoc porting to Katie or even supporting it along with
Qt4 in the same codebase is trivial and requires only minor changes because
Katie is mostly source compatible with Qt 4.8.x, compatibility with releases
earlier than that is not a goal. Do note that using libraries that
are linked to Qt4 from applications linked to Katie will trigger undefined
behaviour.

Should you enouncter a problem please report it at
https://github.com/fluxer/katie/issues. For more information about changes,
how to handle them and general info please visit
https://github.com/fluxer/katie/wiki.
