/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Copyright (C) 2016 Ivailo Monev
**
** This file is part of the documentation of the Katie Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License Usage
** This file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.  Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: http://www.gnu.org/copyleft/fdl.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \headerfile <QtPlugin>
    \title Macros for Defining Plugins

    \brief The <QtPlugin> header files defines macros for defining plugins.
*/

/*!
    \macro Q_DECLARE_INTERFACE(ClassName, Identifier)
    \relates <QtPlugin>

    This macro associates the given \a Identifier (a string literal)
    to the interface class called \a ClassName. The \a Identifier must
    be unique. For example:

    \snippet examples/tools/plugandpaint/interfaces.h 3

    This macro is normally used right after the class definition for
    \a ClassName, in a header file.

    If you want to use Q_DECLARE_INTERFACE with interface classes
    declared in a namespace then you have to make sure the Q_DECLARE_INTERFACE
    is not inside a namespace though.

    \sa Q_INTERFACES(), Q_EXPORT_PLUGIN()
*/

/*!
    \macro Q_EXPORT_PLUGIN(ClassName)
    \relates <QtPlugin>
    \since 4.1
    \keyword Q_EXPORT_PLUGIN

    This macro exports the plugin class \a ClassName for the plugin.

    There should be exactly one occurrence of this macro in the source code
    for a Katie plugin, and it should be used where the implementation is written
    rather than in a header file.

    \sa Q_DECLARE_INTERFACE()
*/
