.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "QDBUSCPP2XML 1"
.TH QDBUSCPP2XML 1 "2021-02-05" "Katie 4.9.2" "Katie Manual"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
qdbuscpp2xml \- a D\-Bus instropection generator for Qt\-based applications
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
qdbuscpp2xml [options...] [files...]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
qdbuscpp2xml parses the \*(C+ source or header file containing a QObject-derived
class and produces the D\-Bus Introspection \s-1XML.\s0
.SH "OPTIONS"
.IX Header "OPTIONS"
.Vb 2
\&    \-p|\-s|\-m
\&        Only parse scriptable Properties, Signals and Methods (slots).
\&
\&    \-P|\-S|\-M
\&        Parse all Properties, Signals and Methods (slots).
\&
\&    \-a
\&        Output all scriptable contents (equivalent to \-psm).
\&
\&    \-A
\&        Output all contents (equivalent to \-PSM).
\&
\&    \-o <filename>
\&        Write the output to file <filename>.
\&
\&    \-h
\&        Show this information.
\&
\&    \-V
\&        Show the program version and quit.
.Ve
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
qdbuscpp2xml returns 0 on success and other on unexcepted failure.
.SH "AUTHORS"
.IX Header "AUTHORS"
The Qt Company Ltd.
.PP
Copyright (C) 2015 The Qt Company Ltd.
Copyright (C) 2016 Ivailo Monev
.PP
Licensed through \s-1GNU\s0 Lesser General Public License/GNU General Public License.
