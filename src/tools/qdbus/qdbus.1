.\" Automatically generated by Pod::Man 4.07 (Pod::Simple 3.32)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "QDBUS 1"
.TH QDBUS 1 "2019-07-01" "Katie 4.9.0" "Katie Manual"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
qdbus \- a communication\-interface for Qt\-based applications
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
qdbus [options] [servicename] [path] [method] [args]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\s-1TODO\s0
.SH "OPTIONS"
.IX Header "OPTIONS"
.Vb 2
\&    \-\-help
\&           Display this information and exit.
\&
\&    \-\-system
\&           Connect to the system bus.
\&
\&    \-\-address <address>
\&           Connect to the given bus.
\&
\&    \-\-literal
\&           Print replies literally.
\&
\&  servicename       the service to connect to (e.g., org.freedesktop.DBus)
\&  path              the path to the object (e.g., /)
\&  method            the method to call, with or without the interface
\&  args              arguments to pass to the call
.Ve
.PP
With 0 arguments, qdbus will list the services available on the bus.
.PP
With just the servicename, qdbus will list the object paths available on
the service.
.PP
With service name and object path, qdbus will list the methods, signals
and properties available on the object.
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
qdbus returns 0 on success and other on unexcepted failure.
.SH "AUTHORS"
.IX Header "AUTHORS"
The Qt Company Ltd.
.PP
Copyright (C) 2015 The Qt Company Ltd.
Copyright (C) 2016\-2019 Ivailo Monev
.PP
Licensed through \s-1GNU\s0 Lesser General Public License/GNU General Public License.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIdbus\-cleanup\-sockets\fR\|(1), \fIdbus\-launch\fR\|(1), \fIdbus\-send\fR\|(1), \fIdbus\-daemon\fR\|(1),
\&\fIdbus\-monitor\fR\|(1), \fIdbus\-uuidgen\fR\|(1)
