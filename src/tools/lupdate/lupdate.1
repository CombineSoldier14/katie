.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "LUPDATE 1"
.TH LUPDATE 1 "2020-11-11" "Katie 4.9.0" "Katie Manual"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
lupdate \- part of Katie's Linguist tool chain
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
lupdate [options] [source\-file|path|@lst\-file] ... \-ts ts\-files|@lst\-file
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
lupdate extracts translatable messages from Qt \s-1UI\s0 files, \*(C+ and
JavaScript/QtScript source code. Extracted messages are stored in textual
translation source files (typically Qt \s-1TS XML\s0). New and modified messages can
be merged into existing \s-1TS\s0 files.
.SH "OPTIONS"
.IX Header "OPTIONS"
.Vb 4
\&    \-h
\&    \-help  Display this information and exit.
\&    \-no\-obsolete
\&           Drop all obsolete strings.
\&
\&    \-extensions <ext>[,<ext>]...
\&           Process files with the given extensions only.
\&           The extension list must be separated with commas, not with whitespace.
\&           Default: \*(Aqui,c,c++,cc,cpp,cxx,ch,h,h++,hh,hpp,hxx,js,qs,qml\*(Aq.
\&
\&    \-pluralonly
\&           Only include plural form messages.
\&
\&    \-silent
\&           Do not explain what is being done.
\&
\&    \-no\-sort
\&           Do not sort contexts in TS files.
\&
\&    \-no\-recursive
\&           Do not recursively scan the following directories.
\&
\&    \-recursive
\&           Recursively scan the following directories (default).
\&
\&    \-I <includepath> or \-I<includepath>
\&           Additional location to look for include files.
\&           May be specified multiple times.
\&
\&    \-locations {absolute|relative|none}
\&           Specify/override how source code references are saved in TS files.
\&           Default is absolute.
\&    \-no\-ui\-lines
\&           Do not record line numbers in references to UI files.
\&
\&    \-disable\-heuristic {sametext|similartext|number}
\&           Disable the named merge heuristic. Can be specified multiple times.
\&
\&    \-source\-language <language>[_<region>]
\&           Specify the language of the source strings for new files.
\&           Defaults to POSIX if not specified.
\&
\&    \-target\-language <language>[_<region>]
\&           Specify the language of the translations for new files.
\&           Guessed from the file name if not specified.
\&
\&    \-ts <ts\-file>...
\&           Specify the output file(s). This will override the TRANSLATIONS
\&           and nullify the CODECFORTR from possibly specified project files.
\&
\&    \-codecfortr <codec>
\&           Specify the codec assumed for tr() calls. Effective only with \-ts.
\&
\&    \-version
\&           Display the version of lupdate and exit.
\&
\&    @lst\-file
\&           Read additional file names (one per line) from lst\-file.
.Ve
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
lupdate returns 0 on success and other on unexcepted failure.
.SH "AUTHORS"
.IX Header "AUTHORS"
The Qt Company Ltd.
.PP
Copyright (C) 2015 The Qt Company Ltd.
Copyright (C) 2016\-2020 Ivailo Monev
.PP
Licensed through \s-1GNU\s0 Lesser General Public License/GNU General Public License.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBlconvert\fR\|(1) \fBlrelease\fR\|(1)
